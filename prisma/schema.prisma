generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?
  accounts      Account[]
  sessions      Session[]
  organization  Organization? @relation(fields: [orgId], references: [id])
  orgId         String?
}

model Organization {
  id        String   @id @default(cuid())
  name      String
  users     User[]
  payables  Payable[]
  receivables Receivable[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Payable {
  id            String   @id @default(cuid())
  amount        Float
  description   String?
  dueDate       DateTime
  status        String   @default("pending")
  reference     String?
  organization  Organization @relation(fields: [orgId], references: [id])
  orgId         String
  vendor        String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Receivable {
  id            String   @id @default(cuid())
  amount        Float
  description   String?
  dueDate       DateTime
  status        String   @default("pending")
  reference     String?
  organization  Organization @relation(fields: [orgId], references: [id])
  orgId         String
  client        String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}
